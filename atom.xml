<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://victoryfan.github.io</id>
    <title>Gridea</title>
    <updated>2020-11-11T06:53:43.211Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://victoryfan.github.io"/>
    <link rel="self" href="https://victoryfan.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://victoryfan.github.io/images/avatar.png</logo>
    <icon>https://victoryfan.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Gridea</rights>
    <entry>
        <title type="html"><![CDATA[10个冷门但实用的Docker实用技巧]]></title>
        <id>https://victoryfan.github.io/post/10-ge-leng-men-dan-shi-yong-de-docker-shi-yong-ji-qiao/</id>
        <link href="https://victoryfan.github.io/post/10-ge-leng-men-dan-shi-yong-de-docker-shi-yong-ji-qiao/">
        </link>
        <updated>2020-11-10T06:19:44.000Z</updated>
        <content type="html"><![CDATA[<h3 id="1-docker-top">1、docker top</h3>
<p>这个命令用来查看一个容器里面的进程信息，如：</p>
<pre><code>docker top int
UID   PID    PPID   C    STIME  TTY   TIME         CMD
root  21119  24419  99   Nov09   ?    1-00:21:33   /usr/local/bin/node ./src/client/host/startNode.js
root  24419  24390   0   Nov09   ?    00:00:00     node ./src/tool/startDPeer.js --main --rpchost 0.0.0.0 --rpcport 7001
</code></pre>
<h3 id="2-docker-load-docker-save">2、docker load &amp;&amp; docker save</h3>
<p>一般使用这两个命令去下载打包Kubernetes的镜像，因为国内的网速有些慢。</p>
<p>docker save 可以把一个镜像保存到 tar 文件中，如：</p>
<pre><code>root@c02_walletnode_server_test_v_hk:~# docker save node:8.12.0 &gt;node-8.12.0.tar
#同时 docker load 可以把镜像从 tar 文件导入到 docker 中
root@c02_walletnode_server_test_v_hk:~# docker load &lt; node-8.12.0.tar
</code></pre>
<p>###3、docker search<br>
这个命令可以在命令行中方便的搜索 DockerHub 中的镜像，比如：</p>
<pre><code>root@c02_walletnode_server_test_v_hk:~# docker search nginx
NAME                               DESCRIPTION                                     STARS               OFFICIAL            AUTOMATED
nginx                              Official build of Nginx.                        13988               [OK]
jwilder/nginx-proxy                Automated Nginx reverse proxy for docker con…   1908                                    [OK]
richarvey/nginx-php-fpm            Container running Nginx + PHP-FPM capable of…   791                                     [OK]
linuxserver/nginx                  An Nginx container, brought to you by LinuxS…   128
jc21/nginx-proxy-manager           Docker container for managing Nginx proxy ho…   109
tiangolo/nginx-rtmp                Docker image with Nginx using the nginx-rtmp…   103                                     [OK]
bitnami/nginx                      Bitnami nginx Docker Image                      90                                      [OK]
alfg/nginx-rtmp                    NGINX, nginx-rtmp-module and FFmpeg from sou…   80                                      [OK]
jlesage/nginx-proxy-manager        Docker container for Nginx Proxy Manager        67                                      [OK]
nginxdemos/hello                   NGINX webserver that serves a simple page co…   63                                      [OK]
nginx/nginx-ingress                NGINX Ingress Controller for Kubernetes         45
privatebin/nginx-fpm-alpine        PrivateBin running on an Nginx, php-fpm &amp; Al…   40                                      [OK]
nginxinc/nginx-unprivileged        Unprivileged NGINX Dockerfiles                  19
schmunk42/nginx-redirect           A very simple container to redirect HTTP tra…   19                                      [OK]
nginx/nginx-prometheus-exporter    NGINX Prometheus Exporter                       15
centos/nginx-112-centos7           Platform for running nginx 1.12 or building …   15
staticfloat/nginx-certbot          Opinionated setup for automatic TLS certs lo…   14                                      [OK]
raulr/nginx-wordpress              Nginx front-end for the official wordpress:f…   13                                      [OK]
centos/nginx-18-centos7            Platform for running nginx 1.8 or building n…   13
flashspys/nginx-static             Super Lightweight Nginx Image                   7                                       [OK]
bitwarden/nginx                    The Bitwarden nginx web server acting as a r…   7
mailu/nginx                        Mailu nginx frontend                            7                                       [OK]
bitnami/nginx-ingress-controller   Bitnami Docker Image for NGINX Ingress Contr…   6                                       [OK]
ansibleplaybookbundle/nginx-apb    An APB to deploy NGINX                          1                                       [OK]
wodby/nginx                        Generic nginx                                   1                                       [OK]
</code></pre>
<h3 id="4-docker-events">4、docker events</h3>
<p>获取 docker 的各种事件信息，比如创建了一个容器什么的。</p>
<pre><code>docker events
2020-07-28T21:28:46.000403018+08:00 image load sha256:432bf69f0427b52cad10897342eaf23521b7d973566354118e9a59c4d31b5fae (name=sha256:432bf69f0427b52cad10897342eaf23521b7d973566354118e9a59c4d31b5fae)
</code></pre>
<h3 id="5-docker-update">5、docker update</h3>
<p>当 docker run 了之后却发现里面有一些参数并不是你想要的状态比如你设置的 nginx 容器 cpu 或内存大小，这个时候你就可以使用 docker update 去修改这些参数。</p>
<pre><code>docker update nginx --cpus 2
</code></pre>
<h3 id="6-docker-history">6、docker history</h3>
<p>当你修改了一个镜像，但是忘记了每一层的修改命令，或者你想查看一个镜像是怎么构建的时候就可以使用这个命令，比如：</p>
<pre><code>root@c02_walletnode_server_test_v_hk:~# docker history int
IMAGE               CREATED             CREATED BY                                      SIZE                COMMENT
1456ce379a71        38 hours ago        /bin/sh -c #(nop)  CMD [&quot;node&quot; &quot;./src/tool/s…   0B
286deaa63603        38 hours ago        /bin/sh -c #(nop)  EXPOSE 7001                  0B
037b119e344c        38 hours ago        /bin/sh -c #(nop) WORKDIR /home/nodeapp/int     0B
f690f91a1762        38 hours ago        /bin/sh -c cd /home/nodeapp/int &amp;&amp; npm insta…   39.3MB
6f8a531c291d        38 hours ago        /bin/sh -c mkdir -p /home/nodeapp/ &amp;&amp; cd /ho…   5.05MB
4e06a9fee726        38 hours ago        /bin/sh -c apt-get install git                  0B
ce426dead114        24 months ago       /bin/sh -c #(nop)  CMD [&quot;node&quot;]                 0B
&lt;missing&gt;           24 months ago       /bin/sh -c set -ex   &amp;&amp; for key in     6A010…   4.5MB
&lt;missing&gt;           24 months ago       /bin/sh -c #(nop)  ENV YARN_VERSION=1.9.4       0B
&lt;missing&gt;           24 months ago       /bin/sh -c ARCH= &amp;&amp; dpkgArch=&quot;$(dpkg --print…   53.8MB
&lt;missing&gt;           24 months ago       /bin/sh -c #(nop)  ENV NODE_VERSION=8.12.0      0B
&lt;missing&gt;           24 months ago       /bin/sh -c set -ex   &amp;&amp; for key in     94AE3…   141kB
&lt;missing&gt;           24 months ago       /bin/sh -c groupadd --gid 1000 node   &amp;&amp; use…   335kB
&lt;missing&gt;           24 months ago       /bin/sh -c set -ex;  apt-get update;  apt-ge…   320MB
&lt;missing&gt;           24 months ago       /bin/sh -c apt-get update &amp;&amp; apt-get install…   123MB
&lt;missing&gt;           24 months ago       /bin/sh -c set -ex;  if ! command -v gpg &gt; /…   0B
&lt;missing&gt;           24 months ago       /bin/sh -c apt-get update &amp;&amp; apt-get install…   41.1MB
&lt;missing&gt;           24 months ago       /bin/sh -c #(nop)  CMD [&quot;bash&quot;]                 0B
&lt;missing&gt;           24 months ago       /bin/sh -c #(nop) ADD file:0b25d0012989e20b9…   127MB
</code></pre>
<p>###7、 docker wait<br>
这个命令可以查看容器的退出状态，比如：</p>
<pre><code>root@c02_walletnode_server_test_v_hk:~# docker wait int
137
</code></pre>
<h3 id="8-docker-pause-docker-unpause">8、docker pause &amp;&amp; docker unpause</h3>
<p>当你运行了一个容器但是想要暂停它运行的时候，就可以使用这个命令。</p>
<pre><code>docker pause int
docker unpause int
</code></pre>
<h3 id="9-docker-diff">9、docker diff</h3>
<p>当你运行了一个容器，但是你不知道容器里修改了哪一些文件的时候可以使用这个命令，比如：</p>
<pre><code>root@c02_walletnode_server_test_v_hk:~# docker diff int
C /home
C /home/nodeapp
C /home/nodeapp/int
C /home/nodeapp/int/data
C /home/nodeapp/int/data/intchain
A /home/nodeapp/int/data/intchain/.options.json
A /home/nodeapp/int/data/intchain/peerData
C /root
A /root/.bash_history
</code></pre>
<h3 id="10-docker-stats">10、docker stats</h3>
<p>这个是 docker 内置的监控命令，当你想查看当前主机下所有容器占用内存和 cpu 的情况的时候就可以使用这个命令。</p>
<pre><code>root@c02_walletnode_server_test_v_hk:~# docker stats

CONTAINER ID        NAME                           CPU %               MEM USAGE / LIMIT     MEM %               NET I/O             BLOCK I/O           PIDS
f278b86b9169        mocknet_stacks-node-follower   22.79%              65.09MiB / 62.91GiB   0.10%               6.73MB / 12MB       0B / 0B             4
25c4f5503d7d        mocknet_explorer               0.14%               68.5MiB / 62.91GiB    0.11%               1.52kB / 0B         0B / 0B             18
20fe840c19a5        mocknet_stacks-node-api        0.39%               98.35MiB / 62.91GiB   0.15%               14.7MB / 15.2MB     0B / 0B             22
d6e08253c502        mocknet_postgres               0.63%               21.96MiB / 62.91GiB   0.03%               12.2MB / 4.82MB     0B / 0B             8
bbc9c57ce680        mocknet_stacks-node-miner      1.10%               62.75MiB / 62.91GiB   0.10%               3.49MB / 3.72MB     0B / 0B             2
ebb3f75adc59        int                            91.52%              159.5MiB / 62.91GiB   0.25%               64.5MB / 2.78MB     0B / 0B             16
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[数据结构与算法]]></title>
        <id>https://victoryfan.github.io/post/shu-ju-jie-gou-yu-suan-fa/</id>
        <link href="https://victoryfan.github.io/post/shu-ju-jie-gou-yu-suan-fa/">
        </link>
        <updated>2020-11-05T05:18:41.000Z</updated>
        <content type="html"><![CDATA[<h1 id="一-数据结构和算法概述">一、数据结构和算法概述</h1>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://victoryfan.github.io/post/hello-gridea/</id>
        <link href="https://victoryfan.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>